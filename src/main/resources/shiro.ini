[main]  
authc.loginUrl = /login.jsp
authc.successUrl  = /app.jsp
logout.redirectUrl = /login.jsp
  
# ------------------------  
# Database  
  
# Own Realm  
jdbcRealm = com.openqc.auth.MyCustomRealm
  
# Sha256  
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# base64 encoding, not hex in this example:  
sha256Matcher.storedCredentialsHexEncoded = false  
sha256Matcher.hashIterations = 1024  
  
jdbcRealm.credentialsMatcher = $sha256Matcher  
  
# User Query  
# default is "select password from users where username = ?"  
jdbcRealm.authenticationQuery = SELECT password, salt FROM User WHERE email = ?
  
# permissions  
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select r.name from UserRole ur,Role r, User u where ur.USER_ID = ? and ur.ROLE_ID=r.ID
jdbcRealm.permissionsQuery = select p.name from RolePermission rp,Role r, Permission p where rp.ROLE_ID = r.ID and rp.PERMISSION_ID=p.ID
  
# Connection   
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
# ds.password = PASSWORD
ds.databaseName = openq
jdbcRealm.dataSource=$ds
  
authc.usernameParam = email
authc.passwordParam = password
authc.failureKeyAttribute = shiroLoginFailure
  
# Use Built-in Cache Manager
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

securityManager.realms = $jdbcRealm

#Session Expiration 3,600,000 milliseconds = 1 hour 
#securityManager.sessionManager.globalSessionTimeout = 3600000

# -----------------------------------------------------------------------------  

[roles]
roleEtudiant = etudiant:read

[users]
admin = admin
[urls]  
# /ws/** = authc, perms["admin:access"]
# /ws/** = authc
/app.jsp = authc
/admin.jsp = authc, perms["admin:access"]
